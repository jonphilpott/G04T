{"name":"G04t","tagline":"G0-4T - The Competitive Arcade Assembler","body":"G0-4T - The Competitive Arcade Assembler\r\n========================================\r\n\r\n\r\n\r\nG0-4T is the game that pits two people crazy enough to play a\r\ncompetitive assembly language game against each other in a battle of\r\nbit twiddling skill.\r\n\r\n\r\nThe object is much like Core-War where you must destroy your opponent\r\nby forcing them to execute a bad instruction. Each player is given up\r\nto four threads, once all 4 of your threads are dead, so are you. Also,\r\nwatch out for bonuses, powerups and traps.\r\n\r\n\r\nYour interface into the game is via gamepads, which, I believe, makes\r\nthis the first gamepad driven assembler ever, impressed? You can move\r\nthroughout the memory space and alter its contents to build your\r\nprogram - what's stopping you from just scrolling to your opponents\r\nspace and messing them up? well, nothing - except each player has a 64\r\nbyte \"protected zone\" that only that player can alter with their\r\ngamepad - if your code is outside of that area, it's in danger. There\r\nis, however, nothing stopping your opponents CODE from altering the\r\nmemory inside your protected area.\r\n\r\nThis game was developed on the Raspberry-Pi using SDL and Emacs. Enjoy.\r\n\r\n\r\nStatus:\r\n-------\r\n\r\n * Currently not playable\r\n * License: GPL \r\n * Requires: sdl1.2\r\n\r\n\r\nCredits:\r\n--------\r\n\r\n * The font is copied from the DOSBOX source.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}